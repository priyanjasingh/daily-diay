/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package daily_diary;

import com.sun.rowset.CachedRowSetImpl;
import static daily_diary.Login.user_login;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PrintWriter;
import java.net.Socket;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import static pkgnew.Main_Frame.ip;
import pkgnew.Search;
import static pkgnew.Search.crs_search;

/**
 *
 * @author priyanja
 */
public class Notes extends javax.swing.JPanel {

    /**
     * Creates new form Notes
     */
    
    int width;
    int height;
    public static ResultSet rs_notes=null;
    
    public Notes() {
        initComponents();
        
        ta.setEditable(false);
         bt_done.setVisible(false);
         bt_save.setVisible(false);
         bt_edit.setVisible(false);
         tf_name.setEditable(false);
         tf_key.setEditable(false);
         tf_topic.setEditable(false);
         ta.setEditable(false);
         
         
         
         
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt_delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        label_name = new javax.swing.JLabel();
        label_key = new javax.swing.JLabel();
        tf_topic = new javax.swing.JTextField();
        tf_key = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ta = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        list_notes = new javax.swing.JList();
        label_topic = new javax.swing.JLabel();
        tf_name = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        bt_done = new javax.swing.JButton();
        bt_edit = new javax.swing.JButton();
        bt_save = new javax.swing.JButton();
        tf_search = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setLayout(null);

        bt_delete.setText("Delete");
        bt_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_deleteActionPerformed(evt);
            }
        });
        add(bt_delete);
        bt_delete.setBounds(560, 100, 90, 30);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jLabel1.setText("YOUR NOTEsss !!");
        add(jLabel1);
        jLabel1.setBounds(210, 10, 320, 32);

        label_name.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        label_name.setText("Name:-");
        add(label_name);
        label_name.setBounds(190, 70, 100, 29);

        label_key.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        label_key.setText("KeyWords:-");
        add(label_key);
        label_key.setBounds(190, 160, 150, 29);
        add(tf_topic);
        tf_topic.setBounds(350, 120, 180, 28);
        add(tf_key);
        tf_key.setBounds(350, 160, 180, 28);

        ta.setColumns(20);
        ta.setRows(5);
        jScrollPane1.setViewportView(ta);

        add(jScrollPane1);
        jScrollPane1.setBounds(190, 220, 460, 240);

        list_notes.setBackground(new java.awt.Color(238, 186, 105));
        list_notes.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        list_notes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                list_notesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(list_notes);

        add(jScrollPane2);
        jScrollPane2.setBounds(20, 116, 140, 340);

        label_topic.setFont(new java.awt.Font("Ubuntu", 1, 24)); // NOI18N
        label_topic.setText("Topic:-");
        add(label_topic);
        label_topic.setBounds(190, 120, 100, 29);
        add(tf_name);
        tf_name.setBounds(350, 80, 180, 28);

        jButton1.setBackground(new java.awt.Color(238, 186, 106));
        jButton1.setText("Add a Note");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1);
        jButton1.setBounds(20, 10, 140, 30);

        bt_done.setBackground(new java.awt.Color(238, 186, 106));
        bt_done.setText("Done");
        bt_done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_doneActionPerformed(evt);
            }
        });
        add(bt_done);
        bt_done.setBounds(560, 180, 90, 30);

        bt_edit.setText("Edit Note");
        bt_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editActionPerformed(evt);
            }
        });
        add(bt_edit);
        bt_edit.setBounds(560, 10, 90, 30);

        bt_save.setText("Save");
        bt_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_saveActionPerformed(evt);
            }
        });
        add(bt_save);
        bt_save.setBounds(560, 140, 90, 30);

        tf_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_searchKeyReleased(evt);
            }
        });
        add(tf_search);
        tf_search.setBounds(20, 70, 140, 28);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/daily_diary/rsz_xyz.jpg"))); // NOI18N
        add(jLabel4);
        jLabel4.setBounds(0, 0, 662, 490);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handlin code here:
         tf_name.setEditable(true);
         tf_key.setEditable(true);
         tf_topic.setEditable(true);
         ta.setEditable(true);
        
         tf_name.setText("");
         tf_key.setText("");
         tf_topic.setText("");
         ta.setText("");
        
         bt_done.setVisible(true);
         
    }//GEN-LAST:event_jButton1ActionPerformed

    private void bt_doneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_doneActionPerformed
        
        Thread t = new Thread(){
        
            public void run(){
            
                try {
            // TODO add your handling code he
            String name= tf_name.getText();
            String topic = tf_topic.getText();
            String key =tf_key.getText();
            
            String note= ta.getText();
            
            tf_name.setEditable(false);
            tf_key.setEditable(false);
            tf_topic.setEditable(false);
            ta.setEditable(false);

            tf_name.setText("");
            tf_key.setText("");
            tf_topic.setText("");
            ta.setText("");
            bt_done.setVisible(false);
            
            long now = System.currentTimeMillis();
            java.util.Date d = new java.util.Date(now);
            System.out.println("update");
            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
               
            System.out.println("checking system status");
                
            String date =dateFormat.format(d).toString();
            
            Database_Server db1 = new Database_Server();
            db1.Start_Connection();
            
            String sql ="INSERT INTO Notes (Name,Topic,Keyword,Note,User_name,Date) values ('"+name+"','"+topic+"','"+key+"','"+note+"','"+user_login+"','"+date+"')";
            db1.stmt.executeUpdate(sql);

            Refresh_notes();
        } catch (SQLException ex) {
            Logger.getLogger(Notes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Notes.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            }
        
        
        };
        t.start();
        
        
        
        
        
    }//GEN-LAST:event_bt_doneActionPerformed

    private void bt_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editActionPerformed
        // TODO add your handling code here:
        Thread t= new Thread(){
        
            public void run(){
                
                {
                    
                    tf_topic.setEditable(true);
                    tf_key.setEditable(true);
                    ta.setEditable(true);
                    bt_save.setVisible(true);
                    bt_done.setVisible(false);
                } 
                
                
            
            }
        
        };
        t.start();
        
    }//GEN-LAST:event_bt_editActionPerformed

    private void bt_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_saveActionPerformed
        // TODO add your handling code here:
        
        Thread t = new Thread(){
        
            public void run(){
            
                try {
            // TODO add your handling code here:
            
                    bt_edit.setVisible(false);
                    bt_delete.setVisible(false);
                    bt_save.setVisible(false);
            tf_topic.setEditable(false);
            tf_key.setEditable(false);
            ta.setEditable(false);
            
            //bt_done.setVisible(false);
            
            //bt_save.setVisible(false);
            String name= tf_name.getText();
            String topic = tf_topic.getText();
            String key =tf_key.getText();
            
            String note= ta.getText();
            
            Database_Server db = new Database_Server();
            db.Start_Connection();
            
            String sql ="Update Notes  set Name = '"+name+"' , Topic = '"+topic+"',Keyword='"+key+"',Note = '"+note+"' where User_name = '"+user_login+"'";
            db.stmt.executeUpdate(sql);
            
            tf_topic.setText("");
            tf_key.setText("");
            ta.setText("");
            tf_name.setText("");
            
            
            Refresh_notes();
        } catch (SQLException ex) {
            Logger.getLogger(Notes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Notes.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            }
        
        
        };
        t.start();
        
    }//GEN-LAST:event_bt_saveActionPerformed

    private void list_notesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_list_notesMouseClicked
        // TODO add your handling code here:
        
        Thread t= new Thread(){
        
            public void run(){
                try {
                    
                    bt_delete.setVisible(true);
                    bt_edit.setVisible(true);
                    bt_done.setVisible(false);
                    String name_note = list_notes.getSelectedValue().toString();
                    
                    rs_notes.beforeFirst();
                    while(rs_notes.next()){
                        
                        String name = rs_notes.getString("Name");
                        String topic = rs_notes.getString("Topic");
                        String key = rs_notes.getString("Keyword");
                        String note = rs_notes.getString("Note");
                        
                        if(name_note.equals(name)){
                            
                            ta.setText(note);
                            tf_name.setText(name);
                            tf_topic.setText(topic);
                            tf_key.setText(key);
                            break;
                        }
                    }
                    
                    tf_name.setEditable(false);
                    tf_topic.setEditable(false);
                    tf_key.setEditable(false);
                    ta.setEditable(false);
                    
                    bt_delete.setVisible(true);        
                } catch (SQLException ex) {
                    Logger.getLogger(Notes.class.getName()).log(Level.SEVERE, null, ex);
                }
                    
                 
            }
        
        };
        t.start();
        
    }//GEN-LAST:event_list_notesMouseClicked

    private void bt_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_deleteActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            bt_edit.setVisible(false);
            String del_notes = ta.getText();
            String key = tf_key.getText();
            String topic = tf_topic.getText();
            String name = tf_name.getText();
            Database_Server db1 = new Database_Server();
            db1.Start_Connection();
            rs_notes.beforeFirst();
            bt_delete.setVisible(false);
           
            while(rs_notes.next())
            {
                if(rs_notes.getString("Name").equals(name))
                {
                    String sql2 = "DELETE FROM Notes where Name = '"+name+"' AND User_Name = '"+user_login+"' ";
                     Database_Server db = new Database_Server();
                      db.Start_Connection();
            
                    db.stmt.executeUpdate(sql2);
                }
            }
            tf_key.setText("");
            tf_name.setText("");
            ta.setText("");
            tf_topic.setText("");
           Refresh_notes();
        } catch (SQLException ex) {
            Logger.getLogger(Todo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Todo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_deleteActionPerformed

    private void tf_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_searchKeyReleased
        // TODO add your handling code here:
        
        Thread t = new Thread(){
            
            public void run(){
            
                try {
                    
                    System.out.println("in search function");
                    String s= tf_search.getText();
                   
                    
                    Database_Server db = new Database_Server();
                    db.Start_Connection();
                    
                    String sql="SELECT * FROM Notes where Topic LIKE '"+"%"+s+"%"+"' OR Name LIKE '"+"%"+s+"%"+"'  OR Keyword LIKE '"+"%"+s+"%"+"'  OR Note LIKE '"+"%"+s+"%"+"'  OR Date LIKE '"+"%"+s+"%"+"'";
                    
                    ResultSet rs = db.stmt.executeQuery(sql);
                    
                    
                    
                    DefaultListModel kuchbhi;
                    kuchbhi = new DefaultListModel();
                      
                    rs.beforeFirst();
                     while(rs.next())
                    {
                        String item_name = rs.getString("Name");
                        System.out.println(item_name);
                        kuchbhi.addElement(item_name);
                        
                    }
                    list_notes.setModel(kuchbhi);
                    
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Search.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Notes.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            
            }
        };
        t.start();
        
        
    }//GEN-LAST:event_tf_searchKeyReleased

    public static void Refresh_notes(){
    
        Thread t= new Thread(){
        
            public void run(){
                
                try {
                    Database_Server db = new Database_Server();
                    db.Start_Connection();
                    
                    String sql ="select * from Notes where User_name = '"+user_login+"' order by date DESC ";
                    rs_notes = db.stmt.executeQuery(sql);
                    
                    DefaultListModel kuchbhi = new DefaultListModel();
                    
                    
                    rs_notes.beforeFirst();
                    while(rs_notes.next()){
                    
                        String name = rs_notes.getString("Name");
                        kuchbhi.addElement(name);
                    }
                    
                    list_notes.setModel(kuchbhi);
                    
                } catch (SQLException ex) {
                    Logger.getLogger(Notes.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(Notes.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                
            
            }
        
        };
        t.start();
    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton bt_delete;
    private javax.swing.JButton bt_done;
    private javax.swing.JButton bt_edit;
    public static javax.swing.JButton bt_save;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label_key;
    private javax.swing.JLabel label_name;
    private javax.swing.JLabel label_topic;
    public static javax.swing.JList list_notes;
    public static javax.swing.JTextArea ta;
    public static javax.swing.JTextField tf_key;
    public static javax.swing.JTextField tf_name;
    private javax.swing.JTextField tf_search;
    public static javax.swing.JTextField tf_topic;
    // End of variables declaration//GEN-END:variables
}
